<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.notification.mapper.NotificationMapper">

    <!-- 알림 삽입 -->
    <insert id="insertNotification" parameterType="NotificationVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notification (
            member_id, type, title, message, target_url, is_read, created_at, related_data
        ) VALUES (
                     #{memberId}, #{type}, #{title}, #{message}, #{targetUrl}, #{isRead}, #{createdAt}, #{relatedData}
                 )
    </insert>

    <!-- 특정 알림 조회 -->
    <select id="selectNotificationById" resultType="NotificationVO">
        SELECT notification_id as id, member_id, type, title, message, target_url, is_read, created_at, read_at, related_data
        FROM notification
        WHERE notification_id = #{id} AND member_id = #{memberId}
    </select>

    <!-- 사용자별 알림 목록 조회 -->
    <select id="selectNotificationsByMemberId" resultType="NotificationVO">
        SELECT notification_id as id, member_id, type, title, message, target_url, is_read, created_at, read_at, related_data
        FROM notification
        WHERE member_id = #{memberId}
        <if test="type != null">
            AND type = #{type}
        </if>
        <if test="isRead != null">
            AND is_read = #{isRead}
        </if>
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 사용자별 알림 개수 조회 -->
    <select id="countNotificationsByMemberId" resultType="long">
        SELECT COUNT(*)
        FROM notification
        WHERE member_id = #{memberId}
        <if test="type != null">
            AND type = #{type}
        </if>
        <if test="isRead != null">
            AND is_read = #{isRead}
        </if>
    </select>

    <!-- 읽지 않은 알림 개수 조회 -->
    <select id="countUnreadNotifications" resultType="long">
        SELECT COUNT(*)
        FROM notification
        WHERE member_id = #{memberId} AND is_read = false
    </select>

    <!-- 특정 알림 읽음 처리 -->
    <update id="updateNotificationAsRead">
        UPDATE notification
        SET is_read = true, read_at = NOW()
        WHERE notification_id = #{id} AND member_id = #{memberId}
    </update>

    <!-- 모든 알림 읽음 처리 -->
    <update id="updateAllNotificationsAsRead">
        UPDATE notification
        SET is_read = true, read_at = NOW()
        WHERE member_id = #{memberId} AND is_read = false
    </update>

    <!-- 사용자 알림 설정 조회 (receive_push_notification 컬럼 사용) -->
    <select id="selectNotificationSettings" resultType="map">
        SELECT
            member_id,
            receive_push_notification as enabled
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 특정 타입 알림 설정 조회 (receive_push_notification 컬럼 사용) -->
    <select id="selectNotificationSetting" resultType="map">
        SELECT
            member_id,
            receive_push_notification as enabled
        FROM member
        WHERE member_id = #{memberId}
    </select>

<!--    &lt;!&ndash; 알림 설정 삽입 (사용하지 않음) &ndash;&gt;-->
<!--    <insert id="insertNotificationSetting">-->
<!--        &lt;!&ndash; 빈 쿼리 - member 테이블의 receive_push_notification 컬럼만 사용 &ndash;&gt;-->
<!--    </insert>-->

    <!-- 알림 설정 업데이트 -->
    <update id="updateNotificationSetting">
        UPDATE member
        SET receive_push_notification = #{isEnabled}
        WHERE member_id = #{memberId}
    </update>

    <!-- 오래된 알림 삭제 -->
    <delete id="deleteOldNotifications">
        DELETE FROM notification
        WHERE created_at &lt; DATE_SUB(NOW(), INTERVAL #{daysBefore} DAY)
    </delete>

    <!-- 관심 사용자 조회 (알림 설정이 활성화된 사용자만) -->
    <select id="selectInterestedMemberIds" resultType="long">
        SELECT DISTINCT p.author_id
        FROM posts p
                 JOIN member m ON p.author_id = m.member_id
        WHERE p.id = #{postId}
          AND p.author_id != #{excludeMemberId}
          AND m.receive_push_notification = true

        UNION

        SELECT DISTINCT c.author_id
        FROM comments c
                 JOIN member m ON c.author_id = m.member_id
        WHERE c.post_id = #{postId}
          AND c.author_id != #{excludeMemberId}
          AND m.receive_push_notification = true
    </select>

</mapper>
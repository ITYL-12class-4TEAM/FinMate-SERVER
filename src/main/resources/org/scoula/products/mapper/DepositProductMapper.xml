<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.products.mapper.DepositProductMapper">

    <!-- 상품 ID로 예금 상품 상세 정보 조회 -->
    <select id="findByProductId" resultType="org.scoula.products.dto.response.deposit.DepositProductDTO">
        SELECT dp.*,
               dp.min_deposit             as joinAmt,
               dp.max_limit               as maxLimit,
               dp.preferential_conditions as spclCnd,
               dp.preferential_tags       as preferentialTags,
               fp.product_id              as productId,
               fp.fin_co_no,
               fp.fin_prdt_cd,
               fp.product_name            as fin_prdt_nm,
               fp.kor_co_nm,
               fp.join_way                as joinWay,
               fp.join_member             as joinMember,
               dp.etc_note                as etcNote,
               dp.mtrt_int,
               pc.homp_url                as companyUrl
        FROM deposit_product dp
                 JOIN financial_product fp ON dp.product_id = fp.product_id
                 LEFT JOIN product_company pc ON fp.fin_co_no = pc.fin_co_no
        WHERE fp.product_id = #{productId}
    </select>

    <!-- 상품 ID로 예금 상품 옵션 정보 조회 -->
    <select id="findOptionsByProductId" resultType="org.scoula.products.dto.response.deposit.DepositOptionDTO">
        SELECT do.*
        FROM deposit_option do
        WHERE do.product_id = #{productId}
    </select>

    <!-- 예금 상품 목록 조회 (필터링 적용) -->
    <select id="findDepositProducts" resultType="org.scoula.products.dto.response.deposit.DepositProductDTO">
        SELECT
        dp.*,
        dp.min_deposit as minDepositAmount,
        dp.max_limit as maxDepositAmount,
        dp.preferential_conditions as spclCnd,
        dp.preferential_tags as preferentialTags,
        fp.fin_co_no,
        fp.fin_prdt_cd,
        fp.product_name as fin_prdt_nm,
        fp.kor_co_nm,
        pc.homp_url as companyUrl,  <!-- 이 줄 추가 -->
        do.rsrv_type as rsrvType,
        do.rsrv_type_nm as rsrvTypeNm
        FROM deposit_product dp
        JOIN financial_product fp ON dp.product_id = fp.product_id
        JOIN deposit_option do ON dp.product_id = do.product_id
        LEFT JOIN product_company pc ON fp.fin_co_no = pc.fin_co_no  <!-- 이 줄 추가 -->
        <where>
            <!-- 기존 where 조건들 유지 -->
            <if test="categoryId != null">
                AND fp.category_id = #{categoryId}
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND EXISTS (
                SELECT 1 FROM product_category c
                WHERE fp.category_id = c.category_id AND c.name = #{categoryName}
                )
            </if>
            <if test="saveTrm != null">
                AND do.save_trm = #{saveTrm}
            </if>
            <if test="intrRateType != null and intrRateType != ''">
                AND do.intr_rate_type = #{intrRateType}
            </if>
            <if test="minIntrRate != null">
                AND do.intr_rate >= #{minIntrRate}
            </if>
            <if test="minAmount != null">
                AND dp.min_deposit &lt;= #{minAmount}
                AND (dp.max_limit IS NULL OR dp.max_limit = 0 OR dp.max_limit &gt;= #{minAmount})
            </if>
        </where>
        GROUP BY dp.product_id,pc.homp_url
    </select>

    <!-- 상품 코드로 상품 정보 조회 -->
    <select id="findByProductCode" resultType="org.scoula.products.dto.response.deposit.DepositProductDTO">
        SELECT fp.product_id as productId,
        fp.fin_co_no as finCoNo,
        fp.fin_prdt_cd as finPrdtCd,
        fp.product_name as finPrdtNm,
        fp.kor_co_nm as korCoNm,
        pc.homp_url as companyUrl,  <!-- 이 줄 추가 -->
        /* 기타 필요한 컬럼들 추가 */
        dp.min_deposit as joinAmt,
        dp.max_limit as maxLimit,
        dp.preferential_conditions as spclCnd,
        dp.preferential_tags aS preferentialTags,
        dp.etc_note as etcNote,
        dp.interest_payment_type as mtrtInt,
        dp.dcls_strt_day as dclsStrtDay,
        dp.dcls_end_day as dclsEndDay,
        CASE
        WHEN dp.is_digital_only = 1 THEN '인터넷뱅킹,스마트폰뱅킹'
        ELSE '인터넷뱅킹,스마트폰뱅킹,창구'
        END as joinWay,
        '제한없음' as joinMember,
        '없음' as joinDeny
        FROM deposit_product dp
        JOIN financial_product fp ON dp.product_id = fp.product_id
        LEFT JOIN product_company pc ON fp.fin_co_no = pc.fin_co_no  <!-- 이 줄 추가 -->
        WHERE fp.fin_prdt_cd = #{productCode}
    </select>

    <!-- 카테고리별 최소 예치 금액 조회 -->
    <select id="getMinDepositAmount" resultType="java.lang.Integer">
        SELECT MIN(dp.min_deposit)
        FROM deposit_product dp
                 JOIN financial_product fp ON dp.product_id = fp.product_id
        WHERE fp.category_id = #{categoryId}
    </select>

    <!-- 카테고리별 최대 예치 금액 조회 -->
    <select id="getMaxDepositAmount" resultType="java.lang.Integer">
        SELECT MAX(COALESCE(dp.max_limit, 100000000))
        FROM deposit_product dp
                 JOIN financial_product fp ON dp.product_id = fp.product_id
        WHERE fp.category_id = #{categoryId}
    </select>

    <!-- 카테고리별 가입 기간 목록 조회 -->
    <select id="getDistinctSaveTerms" resultType="java.lang.Integer">
        SELECT DISTINCT do.save_trm
        FROM deposit_option do
                 JOIN deposit_product dp ON do.product_id = dp.product_id
                 JOIN financial_product fp ON dp.product_id = fp.product_id
        WHERE fp.category_id = #{categoryId}
        ORDER BY do.save_trm
    </select>

    <!-- 카테고리별 이자율 유형 목록 조회 -->
    <select id="getDistinctInterestRateTypes" resultType="java.util.Map">
        SELECT DISTINCT do.intr_rate_type    as "code",
                        do.intr_rate_type_nm as "name"
        FROM deposit_option do
                 JOIN deposit_product dp ON do.product_id = dp.product_id
                 JOIN financial_product fp ON dp.product_id = fp.product_id
        WHERE fp.category_id = #{categoryId}
    </select>

    <select id="findByProductIds" resultType="org.scoula.products.dto.response.deposit.DepositProductDTO">
        SELECT
            fp.product_id AS productId,
            fp.fin_co_no AS finCoNo,
            fp.fin_prdt_cd AS finPrdtCd,
            fp.product_name AS finPrdtNm,
            fp.kor_co_nm AS korCoNm,
            fp.risk_level AS riskLevel,
            fp.external_link AS externalLink,
            fp.wishlist_count AS wishlistCount,
            fp.created_at AS createdAt,
            fp.dcls_month AS dclsMonth,
            fp.subcategory_id AS subcategoryId,
            fp.category_id AS categoryId,
            fp.join_way AS joinWay,
            fp.join_member AS joinMember,
            '없음' AS joinDeny,
            pc.homp_url AS companyUrl, <!-- 중요: product_company 테이블에서 homp_url 가져오기 -->

            dp.min_deposit AS joinAmt,
            dp.min_deposit AS minDepositAmount,
            dp.max_limit AS maxLimit,
            dp.max_limit AS maxDepositAmount,
            dp.preferential_conditions AS preferentialConditions,
            dp.preferential_conditions AS spclCnd,
            dp.inquiry_url AS inquiryUrl,
            dp.etc_note AS etcNote,
            dp.dcls_strt_day AS dclsStrtDay,
            dp.dcls_end_day AS dclsEndDay,
            dp.fin_co_subm_day AS finCoSubmDay,
            dp.preferential_tags AS preferentialTags,
            dp.contract_period AS contractPeriod,
            dp.interest_payment_type AS interestPaymentType,
            dp.interest_payment_type AS mtrtInt,
            dp.is_digital_only AS isDigitalOnly,
            dp.one_account_per_person AS oneAccountPerPerson,
            dp.account_limit_note AS accountLimitNote,
            dp.rotation_cycle AS rotationCycle,
            dp.mtrt_int AS mtrtInt

        FROM financial_product fp
        JOIN deposit_product dp ON fp.product_id = dp.product_id
        LEFT JOIN product_company pc ON fp.fin_co_no = pc.fin_co_no  <!-- 직접 JOIN으로 company 정보 가져오기 -->
        WHERE fp.product_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findOptionsByProductIds" resultType="org.scoula.products.dto.response.deposit.DepositOptionDTO">
        SELECT
        option_id,
        save_trm,
        intr_rate_type,
        intr_rate_type_nm,
        intr_rate,
        intr_rate2,
        rsrv_type,
        rsrv_type_nm,
        product_id AS productId
        FROM deposit_option
        WHERE product_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
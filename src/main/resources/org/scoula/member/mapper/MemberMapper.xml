<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.member.mapper.MemberMapper">

    <!-- 권한 정보 맵핑 -->
    <resultMap id="authMap" type="AuthVO">
        <result property="email" column="email"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <!-- 멤버 정보 맵핑 -->
    <resultMap id="memberMap" type="MemberVO">
        <id property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="role" column="role"/>
    </resultMap>

    <select id="selectByEmail" resultType="org.scoula.security.account.domain.MemberVO">
        SELECT * FROM member WHERE email = #{email}
    </select>
    <select id="selectByNickname" resultType="org.scoula.security.account.domain.MemberVO">
        SELECT * FROM member WHERE nickname = #{nickname}
    </select>
    <!-- 토큰  -->
    <update id="updateTokens">
        UPDATE member
        SET refresh_token = #{refreshToken},
            updated_at = NOW()
        WHERE email = #{username}
    </update>
    <update id="clearRefreshToken">
        UPDATE member
        SET refresh_token = NULL,
            updated_at = NOW()
        WHERE email = #{username}
    </update>

    <select id="findIdByUsername" resultType="long">
        SELECT member_id FROM member WHERE email = #{username}
    </select>

    <insert id="insert" parameterType="org.scoula.security.account.domain.MemberVO">
        INSERT INTO member (username, password, nickname, email, phone_number, birth_date, gender, receive_push_notification)
        VALUES (#{username}, #{password}, #{nickname}, #{email}, #{phoneNumber}, #{birthDate}, #{gender}, #{receivePushNotification})
    </insert>

    <!-- MemberMapper.xml -->
    <select id="getRefreshToken" resultType="string">
        SELECT refresh_token
        FROM member
        WHERE member.member_id = #{memberId}
    </select>

    <select id="findUsernameByNameAndPhone" resultType="string">
        SELECT email
        FROM member
        WHERE username = #{username}
          AND phone_number = #{phoneNumber}
    </select>

    <update id="updatePassword">
        UPDATE member
        SET password = #{Password},
            updated_at = NOW()
        WHERE member_id = #{memberId}
    </update>

    <update id="updateProfile">
        UPDATE member
        SET nickname = #{nickname},
            receive_push_notification = #{receivePushNotification}
        WHERE member_id = #{memberId}
    </update>
    <select id="getMemberIdByEmail" resultType="long">
        SELECT member_id FROM member WHERE email = #{email}
    </select>

    <delete id="deleteMember">
        DELETE FROM member WHERE member_id = #{memberId}
    </delete>

</mapper>
